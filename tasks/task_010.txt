# Task ID: 10
# Title: Fly.io Deployment Configuration
# Status: pending
# Dependencies: 1, 2, 3, 4, 5, 6, 7, 8
# Priority: medium
# Description: Set up Fly.io deployment configuration for all services, including Postgres with pgvector and Redpanda.
# Details:
1. Create Fly.io configuration files in `/infra/fly` directory
2. Configure Fly.io Postgres with pgvector:
```toml
# fly.toml for Postgres
[env]
  POSTGRES_USER = "postgres"
  POSTGRES_PASSWORD = "postgres"
  POSTGRES_DB = "autotriager"

[mounts]
  source = "postgres_data"
  destination = "/var/lib/postgresql/data"
```
3. Configure Redpanda on Fly.io Machines:
```toml
# fly.toml for Redpanda
[env]
  REDPANDA_RPRODUCER_PARTITIONER = "murmur2"
  REDPANDA_RPC_SERVER_LISTEN_ADDR = "0.0.0.0"
  REDPANDA_KAFKA_ADDRESS = "0.0.0.0"

[mounts]
  source = "redpanda_data"
  destination = "/var/lib/redpanda/data"
```
4. Create Fly.io configurations for each service:
   - Ingress service
   - Classifier workers
   - Gateway service
   - Dashboard static hosting
5. Configure secrets management for API keys and credentials
6. Set up networking between services
7. Configure min-count=1 to avoid cold starts
8. Implement health checks for each service

# Test Strategy:
1. Test deployment with staging environment
2. Verify service connectivity in Fly.io environment
3. Test secret management and access
4. Validate health checks are working
5. Measure cold start times
6. Test scaling behavior
