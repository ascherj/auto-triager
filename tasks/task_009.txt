# Task ID: 9
# Title: Manual Correction UI and Feedback Loop
# Status: pending
# Dependencies: 7, 8
# Priority: medium
# Description: Implement the UI and backend functionality for manual corrections to AI classifications, with a feedback loop to update the database.
# Details:
1. Create correction form component in React:
```tsx
function CorrectionForm({ issue, onSubmit }) {
  const [formData, setFormData] = useState({
    component: issue.component,
    severity: issue.severity,
    summary: issue.summary,
    tags: issue.tags.join(', ')
  });
  
  const handleSubmit = async (e) => {
    e.preventDefault();
    await onSubmit({
      ...formData,
      tags: formData.tags.split(',').map(tag => tag.trim())
    });
  };
  
  return (
    <form onSubmit={handleSubmit}>
      {/* Form fields */}
      <button type="submit">Submit Correction</button>
    </form>
  );
}
```
2. Add REST endpoint in gateway service for corrections:
```python
@app.put("/issues/{issue_id}/correction")
async def correct_issue(issue_id: int, correction: IssueCorrectionModel):
    # Update database
    # Publish correction to Kafka topic
    return {"status": "success"}
```
3. Create 'issues.corrections' Kafka topic
4. Modify classifier service to consume from corrections topic
5. Implement database update logic for corrections
6. Add analytics to track correction frequency by field
7. Implement optimistic UI updates for corrections

# Test Strategy:
1. Unit tests for correction form validation
2. Integration tests for correction API endpoint
3. End-to-end tests for full correction flow
4. Verify database updates after corrections
5. Test concurrent corrections to the same issue
